{
  "root": [{
    "id": "module:Index",
    "longname": "module:Index",
    "name": "Index",
    "kind": "module",
    "description": "Fetch data and send it to _app. Render Container component.\n\nUsed by Next.js whenever /index is requested.",
    "category": "Next.js Overrides",
    "meta": {
      "lineno": 2,
      "filename": "index.js",
      "path": "/home/skip/Software/HubClient2.1/src/pages"
    },
    "order": 0
  }, {
    "id": "module:Screen",
    "longname": "module:Screen",
    "name": "Screen",
    "kind": "module",
    "description": "Returns data about screen breakpoints and contents. Users cannot navigate\nto screens or partial screens not listed in ReturnSData > screens.",
    "category": "Services",
    "meta": {
      "lineno": 1,
      "filename": "Screen.js",
      "path": "/home/skip/Software/HubClient2.1/src/services"
    },
    "order": 2
  }, {
    "id": "module:Style",
    "longname": "module:Style",
    "name": "Style",
    "kind": "module",
    "description": "Centralized style computations, variables, specs, and patterns.",
    "category": "Services",
    "meta": {
      "lineno": 2,
      "filename": "Style.js",
      "path": "/home/skip/Software/HubClient2.1/src/services"
    },
    "order": 3
  }, {
    "id": "module:User",
    "longname": "module:User",
    "name": "User",
    "kind": "module",
    "description": "Fetch and return data about user.",
    "category": "Services",
    "todoList": [{
      "done": false,
      "task": "Refactor into module instead of class"
    }, {
      "done": false,
      "task": "Fetch live data"
    }, {
      "done": false,
      "task": "Assign roles in cloud"
    }, {
      "done": false,
      "task": "Set mosManager as a role in cloud"
    }, {
      "done": false,
      "task": "Get showe and shudson ribbon permission from database - in user service"
    }, {
      "done": false,
      "task": "Get jbaker ribbon permission from database - in user service"
    }],
    "meta": {
      "lineno": 1,
      "filename": "User.js",
      "path": "/home/skip/Software/HubClient2.1/src/services"
    },
    "order": 4
  }, {
    "id": "module:Utilities",
    "longname": "module:Utilities",
    "name": "Utilities",
    "kind": "module",
    "description": "Miscellaneous utility functions.",
    "category": "Services",
    "meta": {
      "lineno": 1,
      "filename": "Utilities.js",
      "path": "/home/skip/Software/HubClient2.1/src/services"
    },
    "order": 5
  }, {
    "id": "Icon",
    "longname": "Icon",
    "name": "Icon",
    "kind": "member",
    "scope": "global",
    "description": "Icon component. Gets icon content from Icon Registry. Connected to Redux store.",
    "category": "Ingredients",
    "customTags": [{
      "tag": "component"
    }],
    "meta": {
      "lineno": 1,
      "filename": "Icon.js",
      "path": "/home/skip/Software/HubClient2.1/src/components/Ingredients/Icon"
    },
    "order": 6
  }, {
    "id": "App Loader",
    "longname": "App Loader",
    "name": "App Loader",
    "kind": "member",
    "scope": "global",
    "description": "File is loaded by JS script in SharePoint Online (SPO) master page (mos.2.1.master).\nJS code executes automatically. This is the connection between SPO and this app.\n\nCode either loads the app or arranges things for other SPO areas that use \nthe same master page.\n\nThis is vanilla ES6; it is not compiled or otherwise manipulated. \nThus, it is both source and distribution, and lives in /public.",
    "category": "Services",
    "todoList": [{
      "done": false,
      "task": "Get showe and shudson ribbon permission from database - in user service"
    }, {
      "done": false,
      "task": "Get jbaker ribbon permission from database - in user service"
    }],
    "meta": {
      "lineno": 1,
      "filename": "app-loader.js",
      "path": "/home/skip/Software/HubClient2.1/src/public"
    },
    "order": 1
  }, {
    "id": "Icon.propTypes.iconContent",
    "longname": "Icon.propTypes.iconContent",
    "name": "iconContent",
    "kind": "member",
    "scope": "static",
    "description": "Which SVG should be used. E.g., \"Home\".",
    "memberof": "Icon.propTypes",
    "meta": {
      "lineno": 45,
      "filename": "Icon.js",
      "path": "/home/skip/Software/HubClient2.1/src/components/Ingredients/Icon"
    },
    "order": 7
  }, {
    "id": "Icon.propTypes.contentColor",
    "longname": "Icon.propTypes.contentColor",
    "name": "contentColor",
    "kind": "member",
    "scope": "static",
    "description": "Fill color for SVG. Will be used to find color from Style service. E.g., \"ux-pink\".",
    "memberof": "Icon.propTypes",
    "meta": {
      "lineno": 49,
      "filename": "Icon.js",
      "path": "/home/skip/Software/HubClient2.1/src/components/Ingredients/Icon"
    },
    "order": 8
  }, {
    "id": "Icon.propTypes.contentHeightInRem",
    "longname": "Icon.propTypes.contentHeightInRem",
    "name": "contentHeightInRem",
    "kind": "member",
    "scope": "static",
    "description": "Height of icon, measured in rem. E.g., \"4\".",
    "memberof": "Icon.propTypes",
    "meta": {
      "lineno": 53,
      "filename": "Icon.js",
      "path": "/home/skip/Software/HubClient2.1/src/components/Ingredients/Icon"
    },
    "order": 9
  }, {
    "id": "Icon.propTypes.darkMode",
    "longname": "Icon.propTypes.darkMode",
    "name": "darkMode",
    "kind": "member",
    "scope": "static",
    "description": "From state store. Whether user prefers dark mode. E.g., \"true\".",
    "memberof": "Icon.propTypes",
    "meta": {
      "lineno": 57,
      "filename": "Icon.js",
      "path": "/home/skip/Software/HubClient2.1/src/components/Ingredients/Icon"
    },
    "order": 10
  }]
} [object Object]
